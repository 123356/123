@{ Layout = null; }
<!DOCTYPE html>

<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
   @Html.Partial("~/Views/Home/BaseHTML.cshtml")
    <script type="text/javascript" src="~/Content/js/jquery-1.14.2.min.js"></script>
    <script type="text/javascript" src="~/Content/js/jquery.cookie.js"></script>
    <script type="text/javascript" src="~/Content/js/echarts.min.js"></script>

    <link href="~/Content/d3/css/style.css" rel="stylesheet" />
    <script src="~/Content/d3/js/d3.js"></script>
    <script src="~/Content/d3/js/d3.layout.js"></script>

    <style scoped>
        #body {
            background: #efefef;
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
            display: flex;
            flex-direction: row;
            justify-content: space-around;
            background:#ddd;
        }

        rect {
            fill-opacity: .9;
        }

        text {
            font-size: 16px;
        }

        .electricity {
            color: #ff6a00;
        }

        #editwin {
            display: flex;
            flex-direction: row
        }

            #editwin .barChart {
                height: 100%;
                flex: 2;
                overflow: hidden
            }

            #editwin .pieChart {
                height: 100%;
                flex: 1;
                overflow: hidden
            }
        .chart {
            margin-top: 60px;
            margin-left: 60px;
        }
        
    </style>
</head>
<body>
    <div id="body"></div>
  
    <u id="icon" style="position:absolute;display:none;color:#1800CC;font-size:16px;cursor:pointer;">
        查看详情
    </u>

    <div id="editwin" title="详情" class="easyui-window" closed="true" style="width: 900px;
        height: 300px; padding: 5px;" minimizable="false" maximizable="false" collapsible="false">
        <div class="barChart" id="barChart"></div>
        <div class="pieChart" id="pieChart"></div>
    </div>

    <script>
        var w = document.documentElement.scrollWidth - 120,
            h = document.documentElement.scrollHeight * .8,
            x = d3.scale.linear().range([0, w]),
            y = d3.scale.linear().range([0, h]);

        var vis = d3.select("#body").append("div")
            .attr("class", "chart")
            .style("width", w + "px")
            .style("height", h + "px")
            .append("svg:svg")
            .attr("width", w)
            .attr("height", h);

        var partition = d3.layout.partition()
            .value(function (d) {
                return parseInt(d.UsePower) + 3
            });
        var data = JSON.parse(window.localStorage.getItem("UnitData"));

        $("#icon").on('click', function (e) {
            getElectrMonth(window.d);
            e.stopPropagation();
        })
        var clickInterval = 0;
        $.ajax({
            type: "post",
            url: "/energyManage/EMSetting/GetTreePower",
            data: {
                unitID: data.UnitID,
                item_type: 1,
                unitName: data.UnitName
            },
            success: function (res) {
                if (!res) {
                    return;
                }
                res = res.replace(/{/g, `{"size":1,`);
                var root = JSON.parse(res).children[0];
                var g = vis.selectAll("g")
                    .data(partition.nodes(root))
                    .enter()
                    .append("svg:g")
                    .attr("transform", function (d) {
                        return "translate(" + x(d.y) + "," + y(d.x) + ")";
                    })
          
                   .on('click', click)
                    .on("mouseover", function (d) {
                        $("#icon").hide()
                        var position = $(this).children('text').position();


                        $("#icon").fadeIn()
                            .css("left", position.left+d.name.length*18)
                            .css("top", position.top-5);
                        window.d = d;
                        d3.event.stopPropagation();
                    })
             


                





                var kx = w / root.dx,
                    ky = h / 1;
                g.append("svg:rect")
                    .attr("width", root.dy * kx)
                    .attr("height", function (d) {
                        return d.dx * ky;
                    })
                    .attr("class", function (d) {
                        return d.children.length ? "parent" : "child";
                    })


                var text = g.append("svg:text")
                    .attr("dy", ".35em")
                    .style("opacity", function (d) {
                        return d.dx * ky > 32 ? 1 : 0;
                    })
                    .attr("x", 0)
                    .attr("y", 0)
                    .attr("transform", transform)
                    .text(function (d) {
                        return d.name;
                    })




                text.selectAll("tspan")
                    .data(function (d) {
                        return ["总用电量：" + d.UsePower.toFixed(2)]
                    })
                    .enter()
                    .append("svg:tspan")
                    .attr("x", text.attr("x"))
                    .attr("dy", "1em")
                    .attr('fill', '#333')
                    .text(function (d) {
                        return d;
                    });



                d3.select(window)
                    .on("click", function () {
                       // $(".panel-tool-close").click();
                        click(root);
                    })


                function click(d) {
                    console.log(d)
                    if (window.id == d.id) {
                        click(root);

                        return 
                    } else {
                        window.id = d.id;
                    }

                    $('#icon').hide();
                    var that = this;
                    setTimeout(function () {
                        $('#icon').show();
                        var position = $(that).children('text').position();
                        if (!position) {
                            return;
                        }
                        $("#icon").fadeIn()
                            .css("left", position.left + d.name.length * 18)
                            .css("top", position.top - 8);
                    },800)
              
                    kx = (d.y ? w - 40 : w) / (1 - d.y);
                    ky = h / d.dx;

                    x.domain([d.y, 1]).range([d.y ? 40 : 0, w]);
                    y.domain([d.x, d.x + d.dx]);

                    var t = g.transition()
                        .duration(d3.event.altKey ? 7500 : 750)
                        .attr("transform", function (d) {
                            return "translate(" + x(d.y) + "," + y(d.x) + ")";
                        });

                    t.select("rect")
                        .attr("width", d.dy * kx)
                        .attr("height", function (d) {
                            return d.dx * ky;
                        });


                    t.select("text")
                        .attr("transform", transform)
                        .style("opacity", function (d) {
                            return d.dx * ky > 32 ? 1 : 0;
                        });
                    d3.event.stopPropagation();
                }
                function transform(d) {
                    return "translate(8," + (d.dx * ky / 2 - 8) + ")";
                }
            }
        })

        function getElectrMonth(d) {
            $(".panel-title").text("用电详情——" + d.name);
            $.ajax({
                type: "post",
                url: "/energyManage/EMSetting/GetTreePowerMonth",
                data: {
                    addCid: d.addCid,
                    delCid: d.delCid
                },
                success: function (res) {
                    $("#editwin").window("open");
                    createBarChart(res, d.name);
                    createPieChart(d.children);
                },
                error: function (e) {
                    console.log(e)
                }
            })
        }


        function formatDate(val) {
            if (val != null) {
                var date = new Date(parseInt(val.replace("/Date(", "").replace(")/", ""), 10));
                //月份为0-11，所以+1，月份小于10时补个0
                var month = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var currentDate = date.getDate() < 10 ? "0" + date.getDate() : date.getDate();
                return date.getFullYear() + "-" + month + "-" + currentDate;
            }
            return "";
        }

    </script>
    <script type="text/javascript">
        function createBarChart(data, name) {
            var xData = [];
            var yData = [];
            var count = 0;
            data = data.reverse();
            for (var i in data) {
                var str = formatDate(data[i].RecordTime);
                xData.push(str.substr(str.length - 2, 2))
                yData.push(data[i].UsePower.toFixed(2))
                count += data[i].UsePower;
              
            }
            var barChart = echarts.init(document.getElementById('barChart'));
            console.log(xData)
            var option = {
                title: {
                    text: `${new Date().getMonth()}月—累计用电量`,
                    subtext: Math.floor(count * 100) / 100+"  kW·h",
                    left: 'center',
                    textStyle: {
                        color: '#757575',
                        fontWeight: 'normal',
                        fontSize: 12,
                    },
                    top: 0
                },
                color: ['#57b9a3'],
                tooltip: {
                    trigger: 'axis',
                    formatter: "{a}: <br/>{b}：{c}",
                    axisPointer: { // 坐标轴指示器，坐标轴触发有效
                        type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'
                    },
                    position: ['50%', '50%']
                },

                grid: {
                    top: '18%',
                    bottom: 45,
                    containLabel: true
                },
                xAxis: [{
                    type: 'category',
                    data: xData,
                    axisLine: {
                        lineStyle: {
                            color: '#57b9a3', //x轴线颜色
                            width: '0.7'
                        },
                    },
                    axisTick: {
                        show: false,
                        alignWithLabel: true
                    },

                    axisLabel: { //调整y轴的lable
                        textStyle: {
                            fontSize: 9, // 让字体变大
                            color: '#9f9d9d'
                        }
                    },
                }],
                yAxis: [{
                    type: 'value',
                    name: 'kW·h',
                    axisLine: {
                        lineStyle: {
                            color: '#57b9a3', //x轴线颜色
                            width: '0.7'
                        },
                    },
                    axisTick: {
                        show: false,
                        alignWithLabel: true
                    },

                    axisLabel: { //调整y轴的lable
                        textStyle: {
                            fontSize: 9, // 让字体变大
                            color: '#9f9d9d'
                        }
                    },
                    splitLine: {
                        show: true,
                        lineStyle: {
                            color: '#ededed'
                        }
                    },
                }],
                series: [{
                    name: '总用电量',
                    type: 'bar',
                    barWidth: '50%',
                    data: yData
                }],
                dataZoom: [{
                    type: 'inside'
                }]
            };
            barChart.clear()
            barChart.setOption(option)
            window.addEventListener("resize", () => {
                barChart.resize();
            });
        }

        function createPieChart(data) {
            var subtext = "";
            var series = [];
            var titleTop = 0;
            var allPower = 0;
            var legend = [];

            for (var i in data) {
                legend.push(data[i].name)
                allPower += data[i].UsePower;
                series.push({
                    name: data[i].name,
                    value: data[i].UsePower.toFixed(2)
                })
            }
            if (data.length == 0) {
                subtext = "暂无数据"
                titleTop = '40%'
            }
            var pieChart = echarts.init(document.getElementById('pieChart'));
            var option = {
                title: {
                    text: `${new Date().getMonth()+1}月${new Date().getDate()}日—分项用电`,
                    subtext: subtext,
                    left: 'center',
                    textStyle: {
                        color: '#757575',
                        fontWeight: 'normal',
                        fontSize: 12,
                    },
                    top: titleTop
                },
                tooltip: {
                    trigger: 'item',
                    formatter: "{c}"+"  kW·h"
                },
                series: [
                    {
                        type: 'pie',
                        radius: ['40%', '60%'],
                        center: ['50%', '50%'],
                        avoidLabelOverlap: false,
                        hoverAnimation: true,
                        label: {
                            normal: {
                                show: true,
                                position: 'center',
                                formatter: [

                                    '{b|' + allPower.toFixed(2) + 'kW·h}',
                                ].join('\n'),
                                rich: {
                                    b: {
                                        color: '#525252',
                                        lineHeight: 30,
                                        fontSize: 18,
                                    }
                                },
                            },
                          
                                
                        },
                        data: series,
                        itemStyle: {
                            emphasis: {
                                shadowBlur: 10,
                                shadowOffsetX: 0,
                                shadowColor: 'rgba(0, 0, 0, 0.5)'
                            }
                        },
                    }
                ],
                legend: {
                    type: 'scroll',
                    orient: 'horizontal',
                    right: 0,
                    bottom: 0,
                    data: legend,
                },
            };

            pieChart.clear()
            pieChart.setOption(option)
            window.addEventListener("resize", () => {
                pieChart.resize();
            });
        }



    </script>

</body>
</html>