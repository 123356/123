<!DOCTYPE html>

<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>分项用电</title>



    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
    <script src="https://unpkg.com/element-ui/lib/index.js"></script>
    <script src="https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js"></script>
    <style>
        html,
        body {
            width: 100%;
            height: 100%;
            padding: 0;
            margin: 0;
        }

        #container {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        * {
            box-sizing: border-box
        }

        .body {
            display: flex;
            padding-top: 20px;
        }

        .body,
        .main {
            flex-grow: 1;
        }

        .aside,
        .foot {
            border: 1px solid #000;
        }

        div {
            overflow: hidden;
        }

        .list {
            display: flex;
            width: 100%;
            height: 100%;
        }

        .content {
            display: flex;
            flex-direction: column;
            margin: 10px;
            border-radius: 4px;
            background-color: #F8F8F8;
            overflow: hidden;
            box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);
            color: #4C4C4C;
        }
            .content .title {
                padding: 18px 20px;
                border-bottom: 1px solid #ebeef5;
                box-sizing: border-box;
            }
            p{
                margin:0;padding:0;
            }
        .content .node {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            padding: 0 15px;
        }
        .content .node1 {
            flex-grow: 1;
            display: flex;
            justify-content: space-around;
            padding: 0 15px;
        }
        .Children {
            flex-grow: 1;
        }
        .img{
            height:100%;
            width:100%;
        }
        .f2 {
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            flex-grow: 1;
        }
            .f2 > * {
                margin: 8px 0;
            }
    </style>

</head>

<body>
    <div id="container">
        <div class="body">
            <div class="main" id="main">

                <div style="width:100%;height:100%;flex-grow:1">
                    <div class="list" v-for="itme in list">
                        <div class="content" :style="{'width':style.main.width/floor+'px','font-size':node.font+'px'}">
                            <div class="title">
                                {{itme.name}}
                            </div>
                            <div class="node">
                                <div>
                                    
                                    
                                    <span :style="{'font-size':node.title+'px'}">29.80</span> kw.h
                                    <p><el-button icon="el-icon-search" style="margin-top:20px">查看详情</el-button></p>

                                </div>

                                <p :style="{'height':node.img+'px'}">
                                    <img :src="'../../../Content/images/tree/'+itme.icon" alt="Alternate Text" class="img" />
                                </p>
                            </div>
                        </div>
                        <div class="Children">
                           <tree-menu :list="itme.Children" :floor="floor" :width="node.width" :height="node.height"></tree-menu>
                        </div>
                    </div>
                </div>

            </div>
            <div class="aside" :style="{'width':style.body.width*.25+'px'}"></div>
        </div>
        <div class="foot" :style="{'height':style.body.height*.25+'px'}"></div>
    </div>



    <script type="text/x-template" id="tree-menu">

        <div style="width:100%;height:100%;flex-grow:1;display: flex;flex-direction: column;">
            <div class="list" v-for="itme in list" :style="{'height':height/list.length+'px'}" >
                <div class="content" :style="{'width':width+'px','font-size':font+'px'}">
                    <div class="title">
                        {{itme.name}}实时总用电
                    </div>
                    <div class="node1">

                        <div class="f2">
                            <img :src="'../../../Content/images/tree/'+itme.icon" alt="缺少配置。。" :style="{'height':height/list.length*.2+'px','width':height/list.length*.2+'px'}" />
                            <span> {{itme.name}}</span>
                        </div>

                        <div class="f2">
                            <span> 实时用电</span>
                             <p> <span :style="{'font-size':font*1.2+'px'}">17.40</span><span>kw.h</span></p>
                            <el-button icon="el-icon-search">查看详情</el-button>
                        </div>

                    </div>
                </div>
                <div class="Children">
                    <tree-menu :list="itme.Children" :floor="floor" :width ="width" :height="height/list.length"></tree-menu>
                </div>
            </div>
        </div>

    </script>
    <script>

        Vue.component('treeMenu', {
            template: '#tree-menu',
            props: ["list", "floor", "width", "height"],
            computed: {
                //全部节点
                font: function () {
                    let font = this.height / this.list.length *.04;
                    font = font >= 12 ? font : 12;
                    return font
                },
            },
            data: function () {
                return {
                    leaves: [],
                    node: [],
                }
            },
            created: function () {
                for (let a = 0; a < this.list.length; a++) {
                    if (this.list[a].Children.length == 0) {
                        this.leaves.push(this.list[a]);
                    } else if (this.list[a]) {
                        this.node.push(this.list[a])
                    }
                }
            }
        })



        let vm = new Vue({
            el: "#container",
            data: {
                UnitData: JSON.parse(window.localStorage.getItem("UnitData")),
                list: [],
                floor: 1,
                style: {
                    body: {
                        width: 0,
                        height: 0,
                    },
                    main: {
                        width: 0,
                        height: 0,
                    },
                },
                node: {
                    width:0,
                    height: 0,
                    font: '0px',
                    titile: '0px',
                    img: '0px',
                }
            },
            methods: {
                //获取树
                GetTreePower: function () {
                    if (!this.UnitData.enUID || !this.UnitData.enName) {
                        return
                    }
                    this.$http({
                        url: "/energyManage/EMSetting/GetEnergyTreePower",
                        method: "POST",
                        body: {
                            UnitID: this.UnitData.enUID,
                            ItemType: 1,
                            UnitName: this.UnitData.enName
                        }
                    }).then(function (res) {
                        this.list = res.data;
                        this.floor = this.getMaxFloor(this.list);
                        this.style.body.width = document.body.offsetWidth;
                        this.style.body.height = document.body.offsetHeight;

                        this.style.main.width = this.style.body.width * .75;
                        this.style.main.height = this.style.body.height * .75;


                        this.node.width = this.style.body.width / this.floor;
                        this.node.height = this.style.body.height / this.list.length;


                        this.node.font = this.style.main.height * .04;
                        this.node.titile = this.style.main.height * .09;
                        this.node.img = this.style.main.height * .4;


                       

                        //width/floor
                    })
                },
                //获取层数
                getMaxFloor: function (treeData) {
                    let floor = 0
                    let v = this
                    let max = 0
                    function each(data, floor) {
                        data.forEach(e => {
                            e.floor = floor
                            if (floor > max) {
                                max = floor
                            }
                            e.Children.floor = floor;

                            if (e.Children.length > 0) {
                                each(e.Children, floor + 1)
                            }
                        })
                    }
                    each(treeData, 1)
                    return max
                }
            },
            created: function () {
                this.GetTreePower();
            },
            mounted() {

            }
        });
    </script>
</body>

</html>